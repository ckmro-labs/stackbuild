// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stream.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	stream.proto

It has these top-level messages:
	StreamPoint
	StreamRequest
	StreamResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type StreamPoint struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value int32  `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *StreamPoint) Reset()                    { *m = StreamPoint{} }
func (m *StreamPoint) String() string            { return proto1.CompactTextString(m) }
func (*StreamPoint) ProtoMessage()               {}
func (*StreamPoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *StreamPoint) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StreamPoint) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type StreamRequest struct {
	Pt *StreamPoint `protobuf:"bytes,1,opt,name=pt" json:"pt,omitempty"`
}

func (m *StreamRequest) Reset()                    { *m = StreamRequest{} }
func (m *StreamRequest) String() string            { return proto1.CompactTextString(m) }
func (*StreamRequest) ProtoMessage()               {}
func (*StreamRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StreamRequest) GetPt() *StreamPoint {
	if m != nil {
		return m.Pt
	}
	return nil
}

type StreamResponse struct {
	Pt *StreamPoint `protobuf:"bytes,1,opt,name=pt" json:"pt,omitempty"`
}

func (m *StreamResponse) Reset()                    { *m = StreamResponse{} }
func (m *StreamResponse) String() string            { return proto1.CompactTextString(m) }
func (*StreamResponse) ProtoMessage()               {}
func (*StreamResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *StreamResponse) GetPt() *StreamPoint {
	if m != nil {
		return m.Pt
	}
	return nil
}

func init() {
	proto1.RegisterType((*StreamPoint)(nil), "proto.StreamPoint")
	proto1.RegisterType((*StreamRequest)(nil), "proto.StreamRequest")
	proto1.RegisterType((*StreamResponse)(nil), "proto.StreamResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ExecutorService service

type ExecutorServiceClient interface {
	List(ctx context.Context, in *StreamRequest, opts ...grpc.CallOption) (ExecutorService_ListClient, error)
}

type executorServiceClient struct {
	cc *grpc.ClientConn
}

func NewExecutorServiceClient(cc *grpc.ClientConn) ExecutorServiceClient {
	return &executorServiceClient{cc}
}

func (c *executorServiceClient) List(ctx context.Context, in *StreamRequest, opts ...grpc.CallOption) (ExecutorService_ListClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ExecutorService_serviceDesc.Streams[0], c.cc, "/proto.ExecutorService/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &executorServiceListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ExecutorService_ListClient interface {
	Recv() (*StreamResponse, error)
	grpc.ClientStream
}

type executorServiceListClient struct {
	grpc.ClientStream
}

func (x *executorServiceListClient) Recv() (*StreamResponse, error) {
	m := new(StreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for ExecutorService service

type ExecutorServiceServer interface {
	List(*StreamRequest, ExecutorService_ListServer) error
}

func RegisterExecutorServiceServer(s *grpc.Server, srv ExecutorServiceServer) {
	s.RegisterService(&_ExecutorService_serviceDesc, srv)
}

func _ExecutorService_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ExecutorServiceServer).List(m, &executorServiceListServer{stream})
}

type ExecutorService_ListServer interface {
	Send(*StreamResponse) error
	grpc.ServerStream
}

type executorServiceListServer struct {
	grpc.ServerStream
}

func (x *executorServiceListServer) Send(m *StreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ExecutorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ExecutorService",
	HandlerType: (*ExecutorServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _ExecutorService_List_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "stream.proto",
}

func init() { proto1.RegisterFile("stream.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x2e, 0x29, 0x4a,
	0x4d, 0xcc, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xe6, 0x5c, 0xdc,
	0xc1, 0x60, 0xe1, 0x80, 0xfc, 0xcc, 0xbc, 0x12, 0x21, 0x21, 0x2e, 0x96, 0xbc, 0xc4, 0xdc, 0x54,
	0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x30, 0x5b, 0x48, 0x84, 0x8b, 0xb5, 0x2c, 0x31, 0xa7,
	0x34, 0x55, 0x82, 0x49, 0x81, 0x51, 0x83, 0x35, 0x08, 0xc2, 0x51, 0x32, 0xe6, 0xe2, 0x85, 0x68,
	0x0c, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x52, 0xe2, 0x62, 0x2a, 0x28, 0x01, 0x6b, 0xe4,
	0x36, 0x12, 0x82, 0x58, 0xa2, 0x87, 0x64, 0x74, 0x10, 0x53, 0x41, 0x89, 0x92, 0x09, 0x17, 0x1f,
	0x4c, 0x53, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0x2a, 0x31, 0xba, 0x8c, 0xbc, 0xb8, 0xf8, 0x5d, 0x2b,
	0x52, 0x93, 0x4b, 0x4b, 0xf2, 0x8b, 0x82, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x85, 0xcc, 0xb9,
	0x58, 0x7c, 0x32, 0x8b, 0x4b, 0x84, 0x44, 0x50, 0xb4, 0x40, 0x9d, 0x22, 0x25, 0x8a, 0x26, 0x0a,
	0xb1, 0x4b, 0x89, 0xc1, 0x80, 0x31, 0x89, 0x0d, 0x2c, 0x63, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff,
	0x37, 0x3d, 0x67, 0x2d, 0x0d, 0x01, 0x00, 0x00,
}
